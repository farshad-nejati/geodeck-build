import o,{Suspense as W,useState as X,useEffect as v}from"https://cdn.skypack.dev/react";import"https://cdn.skypack.dev/lodash";import{useGLTF as Z}from"https://cdn.skypack.dev/@react-three/drei";import*as f from"https://cdn.skypack.dev/three";import{useThree as R}from"https://cdn.skypack.dev/@react-three/fiber";import{useReactiveVar as y}from"https://cdn.skypack.dev/@apollo/client";import{toolbarActiveIDVar as j}from"../../apollo/cache.js";import U from"./loader.js";import{button as _,buttonGroup as ee,folder as te,useControls as M}from"https://cdn.skypack.dev/leva";import{GridIcon as ne,EyeOpenIcon as ae,RotateCounterClockwiseIcon as oe,TransparencyGridIcon as re,TextIcon as O,OpacityIcon as S,DimensionsIcon as se,Half2Icon as ie}from"../../../_snowpack/pkg/@radix-ui/react-icons.js";import{getRandomInt as le,traverseMaterials as ce}from"./helpers.js";import me from"./object-component.js";import{active3dVariableVar as de,GeometricObjectsVar as d}from"../../apollo/cache.js";const pe=["#173f5f","#20639b","#3caea3","#f6d55c","#ed553b"],ue=[{name:"visible",label:o.createElement(ae,null)},{name:"position",label:o.createElement(se,null)},{name:"rotation",label:o.createElement(oe,null)}],fe=[{name:"color",label:o.createElement(ie,null)},{name:"transparent",label:o.createElement(re,null)},{name:"opacity",label:o.createElement(S,null),min:0,max:1}],Ve=[],ge=({modelUrl:k,projectId:T,onSave:D,onDelete:P,getScreenShot:$,cameraVar:G,setCameraVar:V})=>{const s=y(d),he=R(),B=y(j),x=y(de),{gl:i,camera:A,scene:L,setDefaultCamera:be}=R();i.toneMapping=f.ACESFilmicToneMapping,i.toneMappingExposure=.6,i.outputEncoding=f.sRGBEncoding,i.preserveDrawingBuffer=!0;const{nodes:Ee,materials:w,animations:ve,scene:c,parser:F,userData:H}=Z(k),z=H.gltfExtensions.KHR_materials_variants;v(()=>(document.addEventListener("onscreenshot",K),()=>{}),[]);const ye=t=>{t&&(console.log("Inline"),V({position:t?.position,rotation:t?.rotation,fov:t?.fov,far:t?.far}))},K=()=>{const t=1920,e=1080;i.setSize(t,e),i.setPixelRatio(16/9),i.render(L,A),console.log(i.getSize()),i.domElement.toBlob(m=>$(m),"image/png",1)};v(()=>{J(c,F,z,x)},[x]);const J=(t,e,m,h)=>{const b=m.variants.findIndex(n=>n.name.includes(h));t.traverse(async n=>{if(!n.isMesh||!n.userData.gltfExtensions)return;const a=n.userData.gltfExtensions.KHR_materials_variants;if(!a)return;n.userData.originalMaterial||(n.userData.originalMaterial=n.material);const r=a.mappings.find(p=>p.variants.includes(b));r?(n.material=await e.getDependency("material",r.material),e.assignFinalMaterial(n)):n.material=n.userData.originalMaterial})},N=M("Main Model",{name:{value:"Model",label:o.createElement(O,null)},opacity:{value:1,label:o.createElement(S,null),min:0,max:1},wireframe:{value:!1,label:o.createElement(ne,null),onChange:t=>{ce(c,e=>{e.wireframe=t})}},save:_(()=>{console.log("objects3"),console.log(s),D(s)})},[s]);w[""].opacity=N.opacity,w[""].transparent=!0,c.position.set(0,0,0),c.background=new f.Color(20);const u=new f.Box3().setFromObject(c),C=u.max.y-u.min.y,I=u.max.x-u.min.x,[g,Y]=X(0),q=s.reduce((t,e,m)=>{const h=ue.reduce((n,a)=>{const r={value:e.mesh.object[a.name],...a,onChange:p=>{const E=s.map(l=>(l.id===e.id&&(l.mesh.object[a.name]=p),l));d(E)}};return{...n,[`${a.name}${e.id}`]:r}},{}),b=fe.reduce((n,a)=>{const r={value:e.mesh.materials[0][a.name],...a,onChange:p=>{const E=s.map(l=>(l.id===e.id&&(l.mesh.materials[0][a.name]=p),l));d(E)}};return{...n,[`${a.name}${e.id}`]:r}},{});return{...t,[`${e.type} ${e.id}`]:te({[`name${e.id}`]:{value:`${e.name}`,label:o.createElement(O,null),onChange:n=>{const a=s.map(r=>(r.id===e.id&&(r.name=n),r));d(a)}},...h,...b,[`actions,${e.id}`]:ee({label:" ",opts:{delete:()=>{const n=s.filter(r=>r.id===e.id)[0];P(n);const a=s.filter(r=>r.id!==e.id);d(a)}}})},{collapsed:!0})}},{}),ke=M(q,[s]),Q=()=>{let t,e;switch(B){case 3:{e="Point",t={type:"SphereGeometry",heightSegments:50,widthSegments:50,radius:.2};break}case 4:{e="Line",t={type:"CylinderGeometry",height:C,radialSegments:50,radiusBottom:.02,radiusTop:.02};break}case 5:{e="Plane",t={type:"PlaneGeometry",height:C,width:I,widthSegments:I,heightSegments:1};break}}if(e){const m={mesh:{object:{rotation:[0,0,0],visible:!0,position:[0,0,0]},geometries:[t],materials:[{type:"MeshBasicMaterial",opacity:.5,transparent:!0,color:pe[le(5)],side:2}]},id:g,name:`${e} ${g}`,type:e,projectId:T,temp:!0};d([...s,m]),Y(g+1),j(1)}};return v(()=>{console.log("rerender when object move")},[s,k]),o.createElement("group",{onClick:Q},o.createElement(W,{fallback:o.createElement(U,null)},o.createElement("primitive",{object:c})),s.map(t=>o.createElement(me,{key:t?.id,...t})))};export default ge;
