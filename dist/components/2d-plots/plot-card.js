import n,{useEffect as A,useState as D}from"../../../_snowpack/pkg/react.js";import s from"../../../_snowpack/pkg/lodash.js";import{Card as L,message as R,Modal as V}from"../../../_snowpack/pkg/antd.js";import{Typography as M}from"../../../_snowpack/pkg/antd.js";import{useLazyQuery as q,useMutation as b,useReactiveVar as F}from"../../../_snowpack/pkg/@apollo/client.js";import{GET_SAMPLE_OF_OBJECT as _}from"../../apollo/queries/index.js";import"../../apollo/cache.js";import{UPDATE_PLOT as G,DELETE_PLOT as Q}from"../../apollo/mutations/index.js";import{plotsVar as U}from"../../apollo/cache.js";import B from"../../apollo/client.js";import H from"./plot-chart.js";import{DeleteOutlined as J,ExclamationCircleOutlined as Y}from"../../../_snowpack/pkg/@ant-design/icons.js";const{Text:K}=M,W=d=>{const[c,g]=D([]),{id:o,name:l,isActive:m,type:k,variable:v,objects:X,onSelectPlot:E,onUpdatePlot:O,variableObjects:r}=d,P=`plot-${o}`,{active:h}=F(U),[N]=b(G),[y]=b(Q),[x]=q(_,{onCompleted:e=>{const t=e?.sampleOfObject;if(console.log(e),t?.data){const a=f(t);console.log(`call getSample API (objectId: ${t.objectId})--------`),p(a)}else m&&R.warning({content:"No data point is available!",key:P,duration:1})}}),p=e=>{const a=c?.find(i=>i.containerName===e.containerName)?T(e):[...c,e];g(a)},f=e=>{if(!e)return null;const t=r.find(i=>i?.object?.id===e.objectId&&i?.variable?.id===e.variableId),a=s.capitalize(t?.variable?.containerName);return{id:t?.id,name:`${a} - ${s.capitalize(t?.object.name)}`,containerName:a,data:e?.data}};A(()=>{r?.length&&r?.map(e=>{const t=e?.object?.id,a=e?.variable?.id;if(c.find(z=>z.id===e?.id))return;const $=B.readQuery({query:_,variables:{objectId:t,variableId:a}}),j=f($?.sampleOfObject);j?p(j):x({variables:{objectId:t,variableId:a}})})},[r,c]);const S=()=>{o!==h?.id&&E(o)},T=e=>c.map(t=>t.containerName===e.containerName?e:t),C=e=>{if(e===l||!e)return;const t={name:e};O(o,t),N({variables:{plotId:o,object:t}})},w=()=>{d.onDeletePlot(o),y({variables:{plotId:o}})},u=()=>{V.confirm({centered:!0,title:"Confirm",icon:n.createElement(Y,null),content:"Are you sure to delete this plot?",okText:"Yes",cancelText:"No",onOk:()=>{w()}})},I=()=>n.createElement("div",{className:"plot__header"},n.createElement(K,{className:"plot__header__title",editable:{onChange:C,autoSize:{minRows:1,maxRows:1}}},`${s.truncate(l,{length:43})}`),!c.length&&n.createElement("div",{className:"plot__header__delete"},n.createElement(J,{onClick:u,style:{fontSize:"16px"}})));return n.createElement(n.Fragment,null,n.createElement(L,{className:`card__plot ${m?"active":""}`,key:o,onClick:S},I(),n.createElement(H,{id:o,name:l,type:k,variable:v,series:c,onDeletePlot:u})))};export default W;
