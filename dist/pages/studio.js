import t,{useEffect as p,useState as h}from"../../_snowpack/pkg/react.js";import{useParams as _}from"../../_snowpack/pkg/react-router-dom.js";import r from"../../_snowpack/pkg/lodash.js";import{useLazyQuery as S,useQuery as w,useReactiveVar as m}from"../../_snowpack/pkg/@apollo/client.js";import b from"../components/studio-page/change-bar.js";import{activeProjectVar as l,containersVar as x,activePanelVar as R}from"../apollo/cache.js";import{GET_CONTAINERS as V,GET_PROJECTS as A}from"../apollo/queries/index.js";import d from"../components/3d-page/index.js";import D from"../components/2d-page/index.js";import"../components/spinner/index.js";import{useHistory as T}from"../../_snowpack/pkg/react-router.js";import{getContainersData as M}from"../data/containers-data.js";import*as u from"../helpers/container.js";import"../../_snowpack/pkg/@react-three/drei.js";const N=G=>{const g=T();let{pId:c,id:L}=_();const a=m(l),s=m(R),f=localStorage.getItem("sub"),[j,v]=h({fov:50,position:[-1.33,-2.26,-47.43],rotation:[-2.67,-1.23,.24]}),{loading:E,error:k,data:C}=w(A,{variables:{userID:f},onCompleted:e=>{const o=e?.projectModel?.items?.find(n=>n.id===r.toInteger(c));l(o)}});p(()=>{const e=r.toInteger(localStorage.getItem("activePanel"));(e!==s||!e)&&localStorage.setItem("activePanel",s)},[]),p(()=>{(!r.isEmpty(k)||r.isEmpty(a)&&!r.isEmpty(C))&&g.push("/project"),r.isEmpty(a)||P({variables:{projectId:r.toInteger(c)}})},[a]);const[P]=S(V,{onCompleted:e=>{const o=e?.containerModel;i(o)},onError:()=>{const o=M()?.containerModel;i(o)}}),i=e=>{const o=e?.items,n=u.create(o),I=u.findActive(n);x({containers:n,active:I})},y=()=>{switch(s){case 1:return t.createElement(d,{camera:j,setCamera:v});case 2:return t.createElement(D,null);case 3:return t.createElement("div",{className:""},t.createElement("div",null,"VR page"),t.createElement(b,{toggle:!1}));case 4:return null;default:return t.createElement(d,null)}};return E||r.isEmpty(a)?null:t.createElement(t.Fragment,null,y())};export default N;
